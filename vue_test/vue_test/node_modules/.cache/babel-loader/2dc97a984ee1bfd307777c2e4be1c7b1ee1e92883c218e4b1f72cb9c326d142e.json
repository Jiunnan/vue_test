{"ast":null,"code":"import { ref } from 'vue';\n\n// const TestModel = {\n//     data() {\n//         return {\n//             count: 0,\n//         };\n//     },\n//     created() {\n//         console.log(\"JN - TestModel created\");\n//     },\n//     methods: {\n//         setCountValueDefault(defaultValue: number) {\n//             this.count = defaultValue;\n//         },\n//         incrementCount() {\n//             this.count++;\n//         },\n//         reduceCount() {\n//             this.count--;\n//         },\n//         doubleCount() {\n//             this.count *= 2;\n//         },\n//     },\n// }\n\nexport function TestModel() {\n  var count = ref(0);\n  function setCountDefaultValue(defaultValue) {\n    count = defaultValue;\n  }\n  function incrementCount() {\n    count++;\n  }\n  function reduceCount() {\n    count--;\n  }\n  function doubleCount() {\n    count *= 2;\n  }\n  function halfCount() {\n    count /= 2;\n  }\n}\nexport default {\n  data() {\n    return {\n      count: 0\n    };\n  },\n  methods: {\n    setCountDefaultValue(defaultValue) {\n      this.count = defaultValue;\n    },\n    incrementCount() {\n      this.count++;\n    },\n    reduceCount() {\n      this.count--;\n    },\n    doubleCount() {\n      this.count *= 2;\n    },\n    halfCount() {\n      this.count /= 2;\n    }\n  }\n};","map":{"version":3,"names":["ref","TestModel","count","setCountDefaultValue","defaultValue","incrementCount","reduceCount","doubleCount","halfCount","data","methods"],"sources":["/Users/jn/Desktop/work/Node/vue_test/vue_test/src/models/CommonModels.js"],"sourcesContent":["import {ref} from 'vue'\n\n// const TestModel = {\n//     data() {\n//         return {\n//             count: 0,\n//         };\n//     },\n//     created() {\n//         console.log(\"JN - TestModel created\");\n//     },\n//     methods: {\n//         setCountValueDefault(defaultValue: number) {\n//             this.count = defaultValue;\n//         },\n//         incrementCount() {\n//             this.count++;\n//         },\n//         reduceCount() {\n//             this.count--;\n//         },\n//         doubleCount() {\n//             this.count *= 2;\n//         },\n//     },\n// }\n\nexport function TestModel() {\n    var count = ref(0)\n\n    function setCountDefaultValue(defaultValue) {\n        count = defaultValue;\n    }\n\n    function incrementCount() {\n        count++;\n    }\n\n    function reduceCount() {\n        count--;\n    }\n\n    function doubleCount() {\n        count *= 2;\n    }\n\n    function halfCount() {\n        count /= 2;\n    }\n}\n\nexport default {\n    data() {\n        return {\n            count: 0\n        };\n    },\n    methods: {\n        setCountDefaultValue(defaultValue) {\n            this.count = defaultValue;\n        },\n        incrementCount() {\n            this.count++;\n        },\n        reduceCount() {\n            this.count--;\n        },\n        doubleCount() {\n            this.count *= 2;\n        },\n        halfCount() {\n            this.count /= 2;\n        },\n    }\n}"],"mappings":"AAAA,SAAQA,GAAG,QAAO,KAAK;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAASA,CAAA,EAAG;EACxB,IAAIC,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC;EAElB,SAASG,oBAAoBA,CAACC,YAAY,EAAE;IACxCF,KAAK,GAAGE,YAAY;EACxB;EAEA,SAASC,cAAcA,CAAA,EAAG;IACtBH,KAAK,EAAE;EACX;EAEA,SAASI,WAAWA,CAAA,EAAG;IACnBJ,KAAK,EAAE;EACX;EAEA,SAASK,WAAWA,CAAA,EAAG;IACnBL,KAAK,IAAI,CAAC;EACd;EAEA,SAASM,SAASA,CAAA,EAAG;IACjBN,KAAK,IAAI,CAAC;EACd;AACJ;AAEA,eAAe;EACXO,IAAIA,CAAA,EAAG;IACH,OAAO;MACHP,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDQ,OAAO,EAAE;IACLP,oBAAoBA,CAACC,YAAY,EAAE;MAC/B,IAAI,CAACF,KAAK,GAAGE,YAAY;IAC7B,CAAC;IACDC,cAAcA,CAAA,EAAG;MACb,IAAI,CAACH,KAAK,EAAE;IAChB,CAAC;IACDI,WAAWA,CAAA,EAAG;MACV,IAAI,CAACJ,KAAK,EAAE;IAChB,CAAC;IACDK,WAAWA,CAAA,EAAG;MACV,IAAI,CAACL,KAAK,IAAI,CAAC;IACnB,CAAC;IACDM,SAASA,CAAA,EAAG;MACR,IAAI,CAACN,KAAK,IAAI,CAAC;IACnB;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}