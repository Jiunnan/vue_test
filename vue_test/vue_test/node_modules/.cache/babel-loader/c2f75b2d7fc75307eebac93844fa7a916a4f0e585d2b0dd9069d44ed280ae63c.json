{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"src\", \"height\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['gift-container', $options.displayType, {\n      'autoTurn': $data.isRunning\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.config.gifts, (gift, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass(['gift', $props.config.style]),\n      key: index,\n      style: _normalizeStyle(`transform: rotateX(${$options.rotate * index}deg) translateZ(${$options.translateZ}px)`)\n    }, [gift.type === 'text' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString(gift.name), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), gift.type === 'image' ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      src: gift.path,\n      height: $props.config.height\n    }, null, 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true)], 6 /* CLASS, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","displayType","$data","isRunning","_Fragment","_renderList","$props","config","gifts","gift","index","style","key","_normalizeStyle","rotate","translateZ","type","_createTextVNode","_toDisplayString","name","_createCommentVNode","src","path","height","_hoisted_1"],"sources":["/app/src/components/TextOptions.vue"],"sourcesContent":["<!-- <template>\n    <div class=\"textOption\">\n        <div :class=\"['option-view', displayType, {'autoTurn': isRunning}]\">\n            <div :class=\"['option', props.config.style]\" v-for=\"(option, index) in props.config.options\" :key=\"index\" :style=\"`transform: rotateX(${(rotate) * index}deg) translateZ(${translateZ}px)`\">\n                <template v-if=\"option.type === 'text'\">{{ option.name }}</template>\n                <template v-if=\"option.type === 'image'\">\n                    <img :src=\"option.path\" :height=\"config.height\">\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, defineProps, defineEmits, computed, onMounted, watch } from 'vue';\nimport { prop } from 'vue-class-component';\nconst props = defineProps({\n    trigger: {\n        type: Date,\n        default: false\n    },\n    config: {\n        type: Object,\n        required: true,\n    },\n});\nconst emits = defineEmits(['finished']);\n\nconst isRunning = ref(false);\nvar currentDeg = 0;\nvar targetDeg = 0;\nvar optionsDeg = [];\nconst displayType = computed(() => {\n    return props.config.run3D ? 'three-dimension' : 'flat';\n})\n\nconst rotate = computed(() => {\n    return 360 / props.config.options.length;\n})\n\nconst translateZ = computed(() => {\n    return (props.config.height / 2) / Math.tan((this.rotate / 2 / 180) * Math.PI)\n})\n\nfunction logOptionDeg() {\n    //記錄獎品角度\n    props.config.options.array.forEach((option, index) => {\n        this.optionsDeg[index] = {\n            from: index === 0 ? 0 : this.optionsDeg[index - 1].to,\n            to: index === 0 ? this.rotate : this.optionsDeg[index - 1].to + this.rotate,\n            name: option.name\n        }\n    });\n}\n\nfunction setConfig() {\n    this.$el.style.setProperty('--rotateY', `${props.config.rotateY}deg`);\n    this.$el.style.setProperty('--duration', `${props.config.duration}ms`);\n    this.$el.style.setProperty('--fontSize', `${props.config.fontSize}px`);\n    this.$el.style.setProperty('--height', `${props.config.height}px`);\n    this.$el.style.setProperty('--width', `${props.config.width}px`);\n    this.$el.style.setProperty('--currentDeg', `${this.currentDeg}deg`);\n}\n\nfunction autoRun() {\n    //取得隨機角度\n    let randomDeg = (Math.random() * 360) + (360 * 5);\n    randomDeg -= randomDeg % this.rotate;\n    this.targetDeg = randomDeg;\n\n    //取得隨機迴轉角度\n    const randomRollBackeg = props.config.rollback ? Math.random() * props.config.rollback + 1 : 1\n\n    //設定轉動角度\n    this.$el.style.setProperty('--targetDeg', `${this.targetDeg}deg`);\n    this.$el.style.setProperty('--rollBackDeg', `${randomRollBackeg}`);\n\n    //執行轉動\n    this.isRunning.value = true\n}\n\nfunction autoRunStop() {\n    //把結束時的角度設定為當前的角度\n    this.currentDeg = this.targetDeg % 360;\n    this.$el.style.setProperty('--currentDeg', `${this.currentDeg}deg`);\n\n    //顯示獎品資料(結束角度 + 單片角度/2)\n    let optionName = null\n    const endDeg = this.currentDeg + (this.rotate / 2);\n    this.optionsDeg.array.forEach(option => {\n        if (endDeg >= option.from && endDeg <= option.to) {\n            optionName = option.name\n        }\n    });\n    //宣告轉動結束\n    this.isRunning.value = false\n    this.emits('finished', optionName)\n}\n\nonMounted(() => {\n    setConfig();\n    logOptionDeg();\n})\n\nwatch(() => props.config, () => {setConfig()}, {deep: true});\nwatch(() => props.trigger, () => {autoRun()}, {deep: true});\nwatch(() => isRunning, (newValue) => {\n    if (isRunning.value) {\n        setTimeout(() => {\n            autoRunStop()\n        }, props.config.duration + 200)\n    }\n}, {deep: true})\n\n</script>\n\n<style scope>\n</style> -->\n\n<template>\n    <div :class=\"['gift-container', displayType, { 'autoTurn': isRunning }]\">\n      <div\n        :class=\"['gift', config.style]\"\n        v-for=\"(gift, index) in config.gifts\"\n        :key=\"index\"\n        :style=\"`transform: rotateX(${(rotate) * index}deg) translateZ(${translateZ}px)`\">\n        <template v-if=\"gift.type === 'text'\">{{ gift.name }}</template>\n        <template v-if=\"gift.type === 'image'\">\n          <img :src=\"gift.path\" :height=\"config.height\">\n        </template>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      trigger: {\n        type: Date,\n        default: false\n      },\n      config: {\n        type: Object,\n        required: true\n      }\n    },\n    data () {\n      return {\n        isRunning: false,\n        currentDeg: 0,\n        targetDeg: 0,\n        giftsDeg: []\n      }\n    },\n    computed: {\n      displayType () {\n        return this.config.run3D ? 'three-dimension' : 'flat'\n      },\n      rotate () {\n        return 360 / this.config.gifts.length\n      },\n      translateZ () {\n        return (this.config.height / 2) / Math.tan((this.rotate / 2 / 180) * Math.PI)\n      }\n    },\n    watch: {\n      config: {\n        handler () {\n          this.setConfig()\n        },\n        deep: true\n      },\n      trigger () {\n        this.autoTurn()\n      },\n      isRunning () {\n        if (this.isRunning) {\n          setTimeout(() => {\n            this.autoTurnStop()\n          }, this.config.duration + 200)\n        }\n      }\n    },\n    mounted () {\n      this.setConfig()\n      this.logGiftsDeg()\n    },\n    methods: {\n      logGiftsDeg () {\n        // 紀錄獎品角度\n        this.config.gifts.forEach((gift, index) => {\n          this.giftsDeg[index] = {\n            from: index === 0 ? 0 : this.giftsDeg[index - 1].to,\n            to: index === 0 ? this.rotate : this.giftsDeg[index - 1].to + this.rotate,\n            name: gift.name\n          }\n        })\n      },\n      setConfig () {\n        // 將config的變數們寫入CSS變數中\n        this.$el.style.setProperty('--rotateY', `${this.config.rotateY}deg`)\n        this.$el.style.setProperty('--duration', `${this.config.duration}ms`)\n        this.$el.style.setProperty('--fontSize', `${this.config.fontSize}px`)\n        this.$el.style.setProperty('--height', `${this.config.height}px`)\n        this.$el.style.setProperty('--width', `${this.config.width}px`)\n        this.$el.style.setProperty('--currentDeg', `-${this.currentDeg}deg`)\n      },\n      autoTurn () {\n        // 取得隨機角度(預設至少跑5圈)\n        let randomDeg = (Math.random() * 360) + (360 * 5)\n        randomDeg -= randomDeg % this.rotate // 減去餘數，避免有高低不一的狀況\n        this.targetDeg = randomDeg\n        // 取得隨機回彈角度\n        const randomRollBackDeg = this.config.rollback\n          ? Math.random() * this.config.rollback + 1\n          : 1\n        // 設定轉動角度\n        this.$el.style.setProperty('--targetDeg', `-${this.targetDeg}deg`)\n        this.$el.style.setProperty('--rollBackDeg', `${randomRollBackDeg}`)\n        // 執行轉動\n        this.isRunning = true\n      },\n      autoTurnStop () {\n        // 把結束時的角度設定為當前角度\n        this.currentDeg = this.targetDeg % 360\n        this.$el.style.setProperty('--currentDeg', `-${this.currentDeg}deg`)\n        // 顯示獎品資料(結束角度 + 單片角度/2)\n        let giftName = null\n        const endDeg = this.currentDeg + (this.rotate / 2)\n        this.giftsDeg.forEach((gift) => {\n          if (endDeg >= gift.from && endDeg <= gift.to) {\n            giftName = gift.name\n          }\n        })\n        // 宣告轉動結束\n        this.isRunning = false\n        this.$emit('finished', giftName) // 告訴上層已經轉完\n      }\n    }\n  }\n  </script>\n  \n  <style lang=\"scss\">\n  .gift-container {\n    /* 變數區 START */\n    $width: var(--width);\n    $height: var(--height);\n    $fontSize: var(--fontSize);\n    //\n    $duration: var(--duration);\n    $rotateY: var(--rotateY);\n    $targetDeg: var(--targetDeg);\n    $currentDeg: var(--currentDeg);\n    $rollBackDeg: var(--rollBackDeg);\n    /* 變數區 END*/\n    * {\n      box-sizing: border-box;\n    }\n    perspective: 999999px;\n    user-select: none;\n    position: relative;\n    display: flex;\n    align-items: center;\n    margin-right: $width;\n    transform-style: preserve-3d;\n    .gift {\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: $width;\n      height: $height;\n      border: 1px solid #333;\n      background-color: #fff;\n      font-size: $fontSize;\n      img {\n        padding: 1px;\n      }\n    }\n  \n    &.flat {\n      transform: rotateX($currentDeg);\n      &.autoTurn {\n        transition: $duration ease-in-out;\n        transform: rotateX($targetDeg);\n      }\n    }\n  \n    &.three-dimension {\n      transform: rotateY($rotateY) rotateX($currentDeg);\n      &.autoTurn {\n        transition: $duration cubic-bezier(0.1, 0, 0, $rollBackDeg);\n        transform: rotateY($rotateY) rotateX($targetDeg);\n      }\n    }\n  }\n  </style>"],"mappings":";mBAAA;;uBAwHIA,mBAAA,CAWM;IAXAC,KAAK,EAxHfC,eAAA,oBAwHoCC,QAAA,CAAAC,WAAW;MAAA,YAAgBC,KAAA,CAAAC;IAAS;yBAClEN,mBAAA,CASMO,SAAA,QAlIZC,WAAA,CA2HgCC,MAAA,CAAAC,MAAM,CAACC,KAAK,EA3H5C,CA2HgBC,IAAI,EAAEC,KAAK;yBAFrBb,mBAAA,CASM;MARHC,KAAK,EA1HdC,eAAA,UA0HyBO,MAAA,CAAAC,MAAM,CAACI,KAAK;MAE5BC,GAAG,EAAEF,KAAK;MACVC,KAAK,EA7HdE,eAAA,uBA6HuCb,QAAA,CAAAc,MAAM,GAAIJ,KAAK,mBAAmBV,QAAA,CAAAe,UAAU;QAC3DN,IAAI,CAACO,IAAI,e,cAAzBnB,mBAAA,CAAgEO,SAAA;MA9HxEQ,GAAA;IAAA,IAAAK,gBAAA,CAAAC,gBAAA,CA8HiDT,IAAI,CAACU,IAAI,iB,+BA9H1DC,mBAAA,gBA+HwBX,IAAI,CAACO,IAAI,gB,cACvBnB,mBAAA,CAA8C;MAhIxDe,GAAA;MAgIgBS,GAAG,EAAEZ,IAAI,CAACa,IAAI;MAAGC,MAAM,EAAEjB,MAAA,CAAAC,MAAM,CAACgB;4BAhIhDC,UAAA,KAAAJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}