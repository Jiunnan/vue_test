{"ast":null,"code":"import { ref } from 'vue';\n\n// const TestModel = {\n//     data() {\n//         return {\n//             count: 0,\n//         };\n//     },\n//     created() {\n//         console.log(\"JN - TestModel created\");\n//     },\n//     methods: {\n//         setCountValueDefault(defaultValue: number) {\n//             this.count = defaultValue;\n//         },\n//         incrementCount() {\n//             this.count++;\n//         },\n//         reduceCount() {\n//             this.count--;\n//         },\n//         doubleCount() {\n//             this.count *= 2;\n//         },\n//     },\n// }\n\n// export function TestModel() {\n//     var count = ref(0)\n\n//     function setCountDefaultValue(defaultValue) {\n//         count.value = defaultValue;\n//     }\n\n//     function incrementCount() {\n//         count.value++;\n//     }\n\n//     function reduceCount() {\n//         count.value--;\n//     }\n\n//     function doubleCount() {\n//         count.value *= 2;\n//     }\n\n//     function halfCount() {\n//         count.value /= 2;\n//     }\n\n//     return count;\n// }\n\nexport default {\n  data() {\n    return {\n      count: 0\n    };\n  },\n  methods: {\n    setCountDefaultValue(defaultValue) {\n      this.count = defaultValue;\n    },\n    incrementCount() {\n      this.count++;\n    },\n    reduceCount() {\n      this.count--;\n    },\n    doubleCount() {\n      this.count *= 2;\n    },\n    halfCount() {\n      this.count /= 2;\n    }\n  }\n};","map":{"version":3,"names":["ref","data","count","methods","setCountDefaultValue","defaultValue","incrementCount","reduceCount","doubleCount","halfCount"],"sources":["/Users/jn/Desktop/work/Node/vue_test/vue_test/src/models/CommonModels.js"],"sourcesContent":["import {ref} from 'vue'\n\n// const TestModel = {\n//     data() {\n//         return {\n//             count: 0,\n//         };\n//     },\n//     created() {\n//         console.log(\"JN - TestModel created\");\n//     },\n//     methods: {\n//         setCountValueDefault(defaultValue: number) {\n//             this.count = defaultValue;\n//         },\n//         incrementCount() {\n//             this.count++;\n//         },\n//         reduceCount() {\n//             this.count--;\n//         },\n//         doubleCount() {\n//             this.count *= 2;\n//         },\n//     },\n// }\n\n// export function TestModel() {\n//     var count = ref(0)\n\n//     function setCountDefaultValue(defaultValue) {\n//         count.value = defaultValue;\n//     }\n\n//     function incrementCount() {\n//         count.value++;\n//     }\n\n//     function reduceCount() {\n//         count.value--;\n//     }\n\n//     function doubleCount() {\n//         count.value *= 2;\n//     }\n\n//     function halfCount() {\n//         count.value /= 2;\n//     }\n\n//     return count;\n// }\n\nexport default {\n    data() {\n        return {\n            count: 0\n        };\n    },\n    methods: {\n        setCountDefaultValue(defaultValue) {\n            this.count = defaultValue;\n        },\n        incrementCount() {\n            this.count++;\n        },\n        reduceCount() {\n            this.count--;\n        },\n        doubleCount() {\n            this.count *= 2;\n        },\n        halfCount() {\n            this.count /= 2;\n        },\n    }\n}"],"mappings":"AAAA,SAAQA,GAAG,QAAO,KAAK;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,oBAAoBA,CAACC,YAAY,EAAE;MAC/B,IAAI,CAACH,KAAK,GAAGG,YAAY;IAC7B,CAAC;IACDC,cAAcA,CAAA,EAAG;MACb,IAAI,CAACJ,KAAK,EAAE;IAChB,CAAC;IACDK,WAAWA,CAAA,EAAG;MACV,IAAI,CAACL,KAAK,EAAE;IAChB,CAAC;IACDM,WAAWA,CAAA,EAAG;MACV,IAAI,CAACN,KAAK,IAAI,CAAC;IACnB,CAAC;IACDO,SAASA,CAAA,EAAG;MACR,IAAI,CAACP,KAAK,IAAI,CAAC;IACnB;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}