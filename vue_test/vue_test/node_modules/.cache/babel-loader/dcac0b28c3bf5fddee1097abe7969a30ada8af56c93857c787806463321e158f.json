{"ast":null,"code":"import { computed, reactive, watch } from 'vue';\nimport { toRefs } from 'vue';\nexport default {\n  __name: 'TestComponent',\n  props: {\n    inputDefault: String\n  },\n  emits: [\"testEmitEvent\"],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const testObject = reactive({\n      id: 39,\n      name: \"miku\"\n    });\n    watch(() => ({\n      ...testObject\n    }), (newValue, oldValue) => {\n      console.log(\"JN - %s --> %s\", oldValue.name, newValue.name);\n    }, {\n      deep: true\n    });\n    const emits = __emit;\n    const inputValue = computed({\n      get() {\n        return props.inputDefault;\n      },\n      set(newValue) {\n        emits(\"testEmitEvent\", newValue);\n      }\n    });\n    const __returned__ = {\n      props,\n      testObject,\n      emits,\n      inputValue,\n      computed,\n      reactive,\n      watch,\n      toRefs\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","reactive","watch","toRefs","props","__props","testObject","id","name","newValue","oldValue","console","log","deep","emits","__emit","inputValue","get","inputDefault","set"],"sources":["/Users/jn/Desktop/work/Node/vue_test/vue_test/src/components/TestComponent.vue"],"sourcesContent":["<template>\n    <div class=\"testComponents\">\n        <slot name=\"xxx\">xxx</slot>\n        <br/>\n        <input type=\"text\" v-model=\"inputValue\" />\n        <br/>\n        <br/>\n        <h2>測試reactive</h2>\n        <h2>ID: {{ testObject.id }}</h2>\n        <h2>Name: {{ testObject.name }}</h2>\n        <input v-model=\"testObject.name\" />\n    </div>\n</template>\n\n<script setup>\nimport { computed, reactive, watch } from 'vue';\nimport { defineProps, defineEmits } from 'vue';\nimport { toRefs } from 'vue';\n\nconst props = defineProps({\n    inputDefault: String\n});\n\nconst testObject = reactive({\n    id : 39,\n    name: \"miku\",\n});\n\nwatch(() => ({...testObject}), (newValue, oldValue) => {\n    console.log(\"JN - %s --> %s\", oldValue.name, newValue.name)\n}, {deep: true})\n\nconst emits = defineEmits([\"testEmitEvent\"]);\n\nconst inputValue = computed({\n    get() {\n        return props.inputDefault;\n    },\n    set(newValue) {\n        emits(\"testEmitEvent\", newValue);\n    }\n})\n\n</script>"],"mappings":"AAeA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAE/C,SAASC,MAAM,QAAQ,KAAK;;;;;;;;;;;;IAE5B,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,UAAU,GAAGL,QAAQ,CAAC;MACxBM,EAAE,EAAG,EAAE;MACPC,IAAI,EAAE;IACV,CAAC,CAAC;IAEFN,KAAK,CAAC,OAAO;MAAC,GAAGI;IAAU,CAAC,CAAC,EAAE,CAACG,QAAQ,EAAEC,QAAQ,KAAK;MACnDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACF,IAAI,EAAEC,QAAQ,CAACD,IAAI,CAAC;IAC/D,CAAC,EAAE;MAACK,IAAI,EAAE;IAAI,CAAC,CAAC;IAEhB,MAAMC,KAAK,GAAGC,MAA8B;IAE5C,MAAMC,UAAU,GAAGhB,QAAQ,CAAC;MACxBiB,GAAGA,CAAA,EAAG;QACF,OAAOb,KAAK,CAACc,YAAY;MAC7B,CAAC;MACDC,GAAGA,CAACV,QAAQ,EAAE;QACVK,KAAK,CAAC,eAAe,EAAEL,QAAQ,CAAC;MACpC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}